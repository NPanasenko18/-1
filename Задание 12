import vk
import pandas as pd
import time


def get_session(access):
    session = vk.AuthSession(access)
    return vk.API(session)

def get_community_posts(community_id, access, posts_count):
    vk_api = get_session(access)
    df_2 = pd.DataFrame()
    n = 0
    while n < posts_count:
        time.sleep(0.33)
        posts = vk_api.wall.get(owner_id=int('-{}'.format(community_id)), count=posts_count, offset = n, access_token = access, v = '5.81')['items']
        df = pd.DataFrame(posts)
        try:
            df2, df3, df4 = pd.DataFrame(list(df['likes'])), pd.DataFrame(list(df['reposts'])), pd.DataFrame(list(df['comments']))
            df['likes'] = df2['count']
            df['reposts'] = df3['count']
            df['comments'] = df4['count']
            df['link'] = df[['from_id','id']].apply(lambda x : 'https://vk.com/wall{}_{}'.format(x[0],x[1]), axis=1)
            df['views'] = pd.DataFrame(list(df['views']))
            df = df[['attachments', 'from_id', 'id', 'link', 'text', 'date', 'likes', 'comments', 'reposts', 'views']]
            df_2 = df_2.append(df)
        except:
            pass
        n = n + 10
    df_2['date'] = pd.to_datetime(df_2['date'], unit='s')
    return df_2

def get_community_comments(community_id, access):
    vk_api = get_session(access)
    x = pd.DataFrame()
    for i in posts['id']:
        try:     
            post_info = vk_api.wall.getById(posts = ['-{}_{}'.format(community_id,i)], access_token = access, v = '5.81')
            comments_count = post_info[0]['comments']['count']
            comment_i = 0
            time.sleep(0.33)
            while comment_i < comments_count:
                comments_list = pd.DataFrame(vk_api.wall.getComments(owner_id=int('-{}'.format(
                    community_id)), post_id = i, count=100, offset = comment_i, need_likes = 1, access_token = access, v = '5.81')['items'])
                comments_list['id'] = i
                comments_list['community_id'] = community_id
                comments_list['link'] = comments_list[['community_id','id','reply_to_comment']].apply(
                    lambda s: 'https://vk.com/wall-{}_{}'.format(s[0],s[1]), axis=1)
                comment_i+=100
                x = x.append(comments_list)
                time.sleep(0.33)
        except:
            pass
    x['date'] = pd.to_datetime(x['date'], unit='s')
    return x

community_id = '152229991'
access = "токен"



posts_count = 1
posts = get_community_posts(community_id, access, posts_count)
comments = get_community_comments(community_id, access)
